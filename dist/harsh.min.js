!function(e){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{var r;r="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this,r.harsh=e()}}(function(){return function e(r,n,o){function t(h,u){if(!n[h]){if(!r[h]){var i="function"==typeof require&&require;if(!u&&i)return i(h,!0);if(a)return a(h,!0);var s=new Error("Cannot find module '"+h+"'");throw s.code="MODULE_NOT_FOUND",s}var f=n[h]={exports:{}};r[h][0].call(f.exports,function(e){var n=r[h][1][e];return t(n?n:e)},f,f.exports,e,r,n,o)}return n[h].exports}for(var a="function"==typeof require&&require,h=0;h<o.length;h++)t(o[h]);return t}({1:[function(e,r,n){"use strict";function o(e){if(Array.isArray(e)){for(var r=0,n=Array(e.length);r<e.length;r++)n[r]=e[r];return n}return Array.from(e)}var t=function(e,r){for(var n=[],o=0;o<e;o++)n.push(Math.floor(Math.random()*Math.pow(10,6)).toString(r));return n},a=function(e,r,n){var t=e.toString(n),a=[].concat(o(r),[t]),h="";do{var u=Math.floor(Math.random()*a.length);h+=a[u],a.splice(u,1)}while(a.length);return h};r.exports={hash:function(e,r,n){if(e=e||[Math.floor(100*Math.random())],r=r||2,n=n||36,!e.splice)throw new TypeError("The ids argument should be an array of numbers");if("number"!=typeof r||r<0)throw new TypeError("The number of salts should be a positive integer");if("number"!=typeof n||n<16||n>36)throw new TypeError("The base should be a number between 16 and 36");var o=t(r,n),h=e.map(function(e){if("number"!=typeof e)throw new TypeError("The ids you're hashing should only be numbers");return a(e,o,n)});return{ids:e,hashes:h,salts:o,base:n}},hashish:function(){return a([Math.floor(100*Math.random())],t(2,36),36)},bunch:function(e,r,n){if(e=e||1,r=r||2,n=n||36,"number"!=typeof e)throw new TypeError("The num should be a number");if("number"!=typeof r||r<0)throw new TypeError("The number of salts should be a positive integer");if("number"!=typeof n||n<16||n>36)throw new TypeError("The base should be a number between 16 and 36");for(var o=[],h=0;h<e;h++)o.push(Math.floor(Math.random()*Math.pow(10,e.toString(10).length+2)));var u=t(r,n),i=o.map(function(e){return a(e,u,n)});return{ids:o,hashes:i,salts:u,base:n}},reverse:function(e,r,n){if(n=n||36,!e.splice)throw new TypeError("The hashes argument should be an array of hashes provided by the hash method");if(!r.splice)throw new TypeError("The salts argument should be an array of salt strings provided by the hash method");if("number"!=typeof n||n<16||n>36)throw new TypeError("The base should be a number between 16 and 36");var o=new RegExp(r.join("|"),"g"),t=e.map(function(e){if("string"!=typeof e)throw new TypeError("The hashes you're reversing should only be strings");var r=e.replace(o,"");return parseInt(r,n)});return t}}},{}]},{},[1])(1)});
//# sourceMappingURL=harsh.min.js.map
