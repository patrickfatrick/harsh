!function(e){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{var r;r="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this,r.harsh=e()}}(function(){return function e(r,n,o){function t(f,u){if(!n[f]){if(!r[f]){var i="function"==typeof require&&require;if(!u&&i)return i(f,!0);if(a)return a(f,!0);var s=new Error("Cannot find module '"+f+"'");throw s.code="MODULE_NOT_FOUND",s}var h=n[f]={exports:{}};r[f][0].call(h.exports,function(e){var n=r[f][1][e];return t(n?n:e)},h,h.exports,e,r,n,o)}return n[f].exports}for(var a="function"==typeof require&&require,f=0;f<o.length;f++)t(o[f]);return t}({1:[function(e,r,n){"use strict";function o(e){if(Array.isArray(e)){for(var r=0,n=Array(e.length);r<e.length;r++)n[r]=e[r];return n}return Array.from(e)}var t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol?"symbol":typeof e},a=function(e,r){for(var n=[],o=0;e>o;o++)n.push(Math.floor(Math.random()*Math.pow(10,6)).toString(r));return n},f=function(e,r,n){var t=e.toString(n),a=[].concat(o(r),[t]),f="";do{var u=Math.floor(Math.random()*a.length);f+=a[u],a.splice(u,1)}while(a.length);return f},u={hash:function(e,r,n){e=e||[Math.floor(100*Math.random())],r=r||2,n=n||36;try{var o=function(){if(!e.splice)throw new TypeError("The ids argument should be an array of numbers");if("number"!=typeof r||0>r)throw new TypeError("The number of salts should be a positive integer");if("number"!=typeof n||16>n||n>36)throw new TypeError("The base should be a number between 16 and 36");var o=a(r,n),t=e.map(function(e){if("number"!=typeof e)throw new TypeError("The ids you're hashing should only be numbers");return f(e,o,n)});return{v:{ids:e,hashes:t,salts:o,base:n}}}();if("object"===("undefined"==typeof o?"undefined":t(o)))return o.v}catch(u){console.error(u.name,u.message)}},bunch:function(e,r,n){e=e||1,r=r||2,n=n||36;try{var o=function(){if("number"!=typeof e)throw new TypeError("The num should be a number");if("number"!=typeof r||0>r)throw new TypeError("The number of salts should be a positive integer");if("number"!=typeof n||16>n||n>36)throw new TypeError("The base should be a number between 16 and 36");for(var o=[],t=0;e>t;t++)o.push(Math.floor(Math.random()*Math.pow(10,e.toString(10).length+2)));var u=a(r,n),i=o.map(function(e){return f(e,u,n)});return{v:{ids:o,hashes:i,salts:u,base:n}}}();if("object"===("undefined"==typeof o?"undefined":t(o)))return o.v}catch(u){console.error(u.name,u.message)}},reverse:function(e,r,n){n=n||36;try{var o=function(){if(!e.splice)throw new TypeError("The hashes argument should be an array of hashes provided by the hash method");if(!r.splice)throw new TypeError("The salts argument should be an array of salt strings provided by the hash method");if("number"!=typeof n||16>n||n>36)throw new TypeError("The base should be a number between 16 and 36");var o=new RegExp(r.join("|"),"g"),t=e.map(function(e){if("string"!=typeof e)throw new TypeError("The hashes you're reversing should only be strings");var r=e.replace(o,"");return parseInt(r,n)});return{v:t}}();if("object"===("undefined"==typeof o?"undefined":t(o)))return o.v}catch(a){console.error(a.name,a.message)}}};r.exports=u},{}]},{},[1])(1)});
//# sourceMappingURL=harsh.min.js.map
